<?php
namespace ZN\Cryptography;

class InternalCrypto extends \CallController implements CryptoInterface, \DriverMethodInterface
{
	//----------------------------------------------------------------------------------------------------
	//
	// Yazar      : Ozan UYKUN <ozanbote@windowslive.com> | <ozanbote@gmail.com>
	// Site       : www.zntr.net
	// Lisans     : The MIT License
	// Telif Hakkı: Copyright (c) 2012-2016, zntr.net
	//
	//----------------------------------------------------------------------------------------------------
		
	//----------------------------------------------------------------------------------------------------
	// Driver Method
	//----------------------------------------------------------------------------------------------------
	// 
	// driver()
	//
	//----------------------------------------------------------------------------------------------------
	use \DriverMethodTrait;

	//----------------------------------------------------------------------------------------------------
	// Protected Crypto
	//----------------------------------------------------------------------------------------------------
	//
	// Sürücü bilgisi 
	//
	// @var  string
	//
	//----------------------------------------------------------------------------------------------------
	protected $crypto;
	
	//----------------------------------------------------------------------------------------------------
	// Construct
	//----------------------------------------------------------------------------------------------------
	// 
	// @param  string $driver
	// @return bool
	//
	//----------------------------------------------------------------------------------------------------
	public function __construct(String $driver = NULL)
	{
		$this->crypto = \Driver::run('Encode', $driver);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Encrypt Method Başlangıç
	//----------------------------------------------------------------------------------------------------

	/******************************************************************************************
	* ENCRYPT                                                                                 *
	*******************************************************************************************
	| Genel Kullanım: Dizgeyi şifreler.										 		          |
	
	  @param string $data
	  @param array  $settings -> cipher, key, mode, iv
	  
	  @return string
	|          																				  |
	******************************************************************************************/
	public function encrypt(String $data,  Array $settings = NULL)
	{
		return $this->crypto->encrypt($data,  (array) $settings);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Encrypt Method Bitiş
	//----------------------------------------------------------------------------------------------------
	
	//----------------------------------------------------------------------------------------------------
	// Decrypt Method Başlangıç
	//----------------------------------------------------------------------------------------------------

	/******************************************************************************************
	* DECRYPT                                                                                 *
	*******************************************************************************************
	| Genel Kullanım: Şifrelenmiş dizgeyi çözer.							 		          |
	
	  @param string $data
	  @param array  $settings -> cipher, key, mode, iv
	  
	  @return string
	|          																				  |
	******************************************************************************************/
	public function decrypt(String $data, Array $settings = NULL)
	{
		return $this->crypto->decrypt($data,  (array) $settings);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Decrypt Method Bitiş
	//----------------------------------------------------------------------------------------------------
	
	//----------------------------------------------------------------------------------------------------
	// Keygen Method Başlangıç
	//----------------------------------------------------------------------------------------------------

	/******************************************************************************************
	* KEYGEN                                                                                  *
	*******************************************************************************************
	| Genel Kullanım: Belirtilen uzunlukta anahtar oluşturur.				 		          |
	
	  @param string $length = 8
	  
	  @return string
	|          																				  |
	******************************************************************************************/
	public function keygen($length = 8)
	{
		if( ! is_numeric($length) )
		{
			return \Exceptions::throws('Error', 'numericParameter', '1.(length)');	
		}
		
		return $this->crypto->keygen($length);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Keygen Method Bitiş
	//----------------------------------------------------------------------------------------------------
}