<?php namespace ZN\DataTypes;

use Converter, CallController;

class InternalFilters extends CallController implements InternalFiltersInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Get Var
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $varName
    //
    //--------------------------------------------------------------------------------------------------------
    public function getVar(string $varName) : bool
    {
        return $this->_var($varName, INPUT_GET);
    }

    //--------------------------------------------------------------------------------------------------------
    // Post Var
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $varName
    //
    //--------------------------------------------------------------------------------------------------------
    public function postVar(string $varName) : bool
    {
        return $this->_var($varName, INPUT_POST);
    }

    //--------------------------------------------------------------------------------------------------------
    // Cookie Var
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $varName
    //
    //--------------------------------------------------------------------------------------------------------
    public function cookieVar(string $varName) : bool
    {
        return $this->_var($varName, INPUT_COOKIE);
    }

    //--------------------------------------------------------------------------------------------------------
    // Env Var
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $varName
    //
    //--------------------------------------------------------------------------------------------------------
    public function envVar(string $varName) : bool
    {
        return $this->_var($varName, INPUT_ENV);
    }

    //--------------------------------------------------------------------------------------------------------
    // Server Var
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $varName
    //
    //--------------------------------------------------------------------------------------------------------
    public function serverVar(string $varName) : bool
    {
        return $this->_var($varName, INPUT_SERVER);
    }

    //--------------------------------------------------------------------------------------------------------
    // ID
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $filterName
    //
    //--------------------------------------------------------------------------------------------------------
    public function id(string $filterName) : int
    {
        return filter_id($filterName);
    }

    //--------------------------------------------------------------------------------------------------------
    // Get List
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function getList() : array
    {
        return filter_list();
    }

    //--------------------------------------------------------------------------------------------------------
    // Input Array
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type
    // @param mixed  $definition
    // @param bool   $addEmpty
    //
    //--------------------------------------------------------------------------------------------------------
    public function inputArray(string $type = 'post', $definition = NULL, bool $addEmpty = true)
    {
        return filter_input_array($this->_inputConstant($type), $definition, $addEmpty);
    }

    //--------------------------------------------------------------------------------------------------------
    // Var Array
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array  $data
    // @param mixed  $definition
    // @param bool   $addEmpty
    //
    //--------------------------------------------------------------------------------------------------------
    public function varArray(array $data, $definition = NULL, bool $addEmpty = true)
    {
        return filter_var_array($data, $definition, $addEmpty);
    }

    //--------------------------------------------------------------------------------------------------------
    // Input
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $var
    // @param string $type
    // @param string $filter
    // @param mixed  $options
    //
    //--------------------------------------------------------------------------------------------------------
    public function input(string $var, string $type = 'post', string $filter = 'default' , $options = NULL)
    {
        return filter_input($this->_inputConstant($type), $var, $this->_filterConstant($filter), $options);
    }

    //--------------------------------------------------------------------------------------------------------
    // Vars
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed  $var
    // @param string $filter
    // @param mixed  $options
    //
    //--------------------------------------------------------------------------------------------------------
    public function vars($var, string $filter = 'default', $options = NULL)
    {
        return filter_var($var, $this->_filterConstant($filter), $options);
    }

    //--------------------------------------------------------------------------------------------------------
    // Sanitize
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $const;
    //
    //--------------------------------------------------------------------------------------------------------
    public function sanitize(string $const)
    {
        return $this->_validate($const, __FUNCTION__);
    }

    //--------------------------------------------------------------------------------------------------------
    // Validate
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $const;
    //
    //--------------------------------------------------------------------------------------------------------
    public function validate(string $const)
    {
        return $this->_validate($const, __FUNCTION__);
    }

    //--------------------------------------------------------------------------------------------------------
    // Force
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $const;
    //
    //--------------------------------------------------------------------------------------------------------
    public function force(string $const)
    {
        return $this->_validate($const, __FUNCTION__);
    }

    //--------------------------------------------------------------------------------------------------------
    // Flag
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $const;
    //
    //--------------------------------------------------------------------------------------------------------
    public function flag(string $const)
    {
        return $this->_validate($const, __FUNCTION__);
    }

    //--------------------------------------------------------------------------------------------------------
    // Required
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $const;
    //
    //--------------------------------------------------------------------------------------------------------
    public function required(string $const)
    {
        return $this->_validate($const, 'require');
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Var
    //--------------------------------------------------------------------------------------------------------
    protected function _var($varName = '', $type)
    {
        return filter_has_var($this->_inputConstant($type), $varName);
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Input Constant
    //--------------------------------------------------------------------------------------------------------
    protected function _inputConstant($const)
    {
        return Converter::toConstant($const, 'INPUT_');
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Filter Constant
    //--------------------------------------------------------------------------------------------------------
    protected function _filterConstant($const)
    {
        return Converter::toConstant($const, 'FILTER_');
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Validate
    //--------------------------------------------------------------------------------------------------------
    protected function _validate($const, $type)
    {
        return constant('FILTER_'.strtoupper($type).'_'.strtoupper($const));
    }
}
