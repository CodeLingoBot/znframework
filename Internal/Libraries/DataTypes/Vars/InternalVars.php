<?php namespace ZN\DataTypes;

use CallController;
use ZN\DataTypes\Vars\Exception\InvalidArgumentException;

class InternalVars extends CallController implements InternalVarsInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Bool
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function bool($var) : bool
    {
        return boolval($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Boolean
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function boolean($var) : bool
    {
        return boolval($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Float
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function float($var) : float
    {
        return floatval($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Double
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function double($var) : float
    {
        return floatval($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Int
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function int($var) : int
    {
        return intval($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Integer
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function integer($var) : int
    {
        return intval($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // String
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function string($var) : string
    {
        return strval($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //--------------------------------------------------------------------------------------------------------
    public function type($var) : string
    {
        return gettype($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Resource Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $resource
    //
    //--------------------------------------------------------------------------------------------------------
    public function resourceType($resource) : string
    {
        if( ! is_resource($resource) )
        {
            throw new InvalidArgumentException('Error', 'resourceParameter', '1.($resource)');
        }

        return get_resource_type($resource);
    }

    //--------------------------------------------------------------------------------------------------------
    // Serial
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //-------------------------------------------------------------------------------------------------------
    public function serial($var) : string
    {
        return serialize($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Unserial
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //-------------------------------------------------------------------------------------------------------
    public function unserial(string $var)
    {
        return unserialize($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Remove
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //-------------------------------------------------------------------------------------------------------
    public function remove($var) : void
    {
        unset($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // Delete
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //-------------------------------------------------------------------------------------------------------
    public function delete($var) : void
    {
        $this->remove($var);
    }

    //--------------------------------------------------------------------------------------------------------
    // To Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @param mixed $var
    //
    //-------------------------------------------------------------------------------------------------------
    public function toType($var, string $type = 'integer')
    {
        settype($var, $type);

        return $var;
    }
}
