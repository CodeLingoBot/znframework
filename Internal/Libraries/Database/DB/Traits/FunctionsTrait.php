<?php
namespace ZN\Database\DB\Traits;

trait FunctionsTrait
{
	//----------------------------------------------------------------------------------------------------
	//
	// Yazar      : Ozan UYKUN <ozanbote@windowslive.com> | <ozanbote@gmail.com>
	// Site       : www.zntr.net
	// Lisans     : The MIT License
	// Telif HakkÄ±: Copyright (c) 2012-2016, zntr.net
	//
	//----------------------------------------------------------------------------------------------------
	
	//----------------------------------------------------------------------------------------------------
	// Switch Case
	//----------------------------------------------------------------------------------------------------
	//
	// @param string $switch
	// @param array  $conditions
	// @param bool   $return
	//
	//----------------------------------------------------------------------------------------------------
	public function switchCase(String $switch, Array $conditions = [], Bool $return = false)
	{
		$case = ' CASE '.$switch;
		
		if( is_array($conditions) ) foreach( $conditions as $key => $val )
		{
			if( strtolower($key) === 'default' || strtolower($key) === 'else' )
			{
				$key = ' ELSE ';
			}
			else
			{
				$key = ' WHEN '.$key.' THEN ';
			}
			
			$case .= $key.$val;
		}
		
		$case .= ' END; ';
		
		if( $return === true )
		{
			return $case;
		}
		else
		{
			$this->selectFunctions[] = $case;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// If Else
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ifElse(...$args)
	{
		$math = $this->_math('IF', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// If Null
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ifNull(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Null If
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function nullIf(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Abs
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function abs(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
	
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Mod
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function mod(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Acos
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function acos(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Asin
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function asin(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Atan
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function atan(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Atan 2
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function atan2(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Ceil
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ceil(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Ceiling
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ceiling(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Cos
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function cos(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Cot
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function cot(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Crc32
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function crc32(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Degrees
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function degrees(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Exp
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function exp(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Floor
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function floor(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Ln
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ln(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Log10
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function log10(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Log2
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function log2(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Log
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function log(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Pi
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function pi(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Pow
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function pow(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Power
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function power(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Radians
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function radians(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Rand
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function rand(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Raund
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function raund(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Sign
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function sign(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Sin
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function sin(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Sqrt
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function sqrt(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Tan
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function tan(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Like
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function like(String $value, String $type = 'starting') : String
	{
		$operator = $this->db->operator(__FUNCTION__);
		
		if( $type === "inside" ) 
		{
			$value = $operator.$value.$operator;
		}
		
		// Ä°le BaÅlayan
		if( $type === "starting" ) 
		{
			$value = $value.$operator;
		}
		
		// Ä°le Biten
		if( $type === "ending" ) 
		{
			$value = $operator.$value;
		}
		
		return $value;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Ascii
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ascii(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Char Lenght
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function charLength(...$args)
	{
		$math = $this->_math('CHAR_LENGTH', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}

	//----------------------------------------------------------------------------------------------------
	// Field
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function field(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Format
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function format(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Lower
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function lower(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Upper
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function upper(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Lenght
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function length(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}

	//----------------------------------------------------------------------------------------------------
	// Ltrim
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ltrim(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Substring
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function substring(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Ord
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ord(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Position
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function position(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Quote
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function quote(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Repeat
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function repeat(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Rtrim
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function rtrim(...$args)

	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Soundex
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function soundex(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Space
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function space(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Substr
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function substr(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Substring Index
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function substringIndex(...$args)
	{
		$math = $this->_math('SUBSTRING_INDEX', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Trim
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function trim(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Ucase
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function ucase(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Lcase
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function lcase(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Benchmark
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function benchmark(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Charset
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function charset(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Coercibility
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function coercibility(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// User
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function user(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Collation
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function collation(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Connection ID
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function connectionId(...$args)
	{
		$math = $this->_math('CONNECTION_ID', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Curent User
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function currentUser(...$args)
	{
		$math = $this->_math('CURRENT_USER', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Database
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function database(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Schema
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function schema(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Last Insert ID
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function lastInsertId(...$args)
	{
		$math = $this->_math('LAST_INSERT_ID', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// System User
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function systemUser(...$args)
	{
		$math = $this->_math('SYSTEM_USER', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Session User
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function sessionUser(...$args)
	{
		$math = $this->_math('SESSION_USER', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Row Count
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function rowCount(...$args)
	{
		$math = $this->_math('ROW_COUNT', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Version Info
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function versionInfo(...$args)
	{
		$math = $this->_math('VERSION', $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Avg
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function avg(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
	
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Min
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function min(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Max
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function max(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Count
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function count(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Sum
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function sum(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;

		
			return $this;
		}
	}
	
	//----------------------------------------------------------------------------------------------------
	// Variance
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//
	//----------------------------------------------------------------------------------------------------
	public function variance(...$args)
	{
		$math = $this->_math(__FUNCTION__, $args);
		
		if( $math->return === true )
		{
			return $math->args;
		}
		else
		{
			$this->selectFunctions[] = $math->args;
		
			return $this;
		}
	}
}