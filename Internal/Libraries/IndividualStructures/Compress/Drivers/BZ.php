<?php namespace ZN\IndividualStructures\Compress\Drivers;

class BZDriver extends Abstracts\CompressDriverMappingAbstract
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Telif HakkÄ±: Copyright (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------
    
    //--------------------------------------------------------------------------------------------------------
    // Construct
    //--------------------------------------------------------------------------------------------------------
    // 
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function __construct()
    {
        \Support::func('bzopen', 'BZ');  
    }

    //--------------------------------------------------------------------------------------------------------
    // Extract
    //--------------------------------------------------------------------------------------------------------
    // 
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function extract($source, $target, $password)
    {
        \Support::func('bzextract', 'BZ Driver Extract');   
    }

    //--------------------------------------------------------------------------------------------------------
    // Write
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $file
    // @param string $data
    // @param string $mode
    //
    //--------------------------------------------------------------------------------------------------------
    public function write($file, $data, $mode)
    {
        $open = bzopen($file, $mode);
        
        if( empty($open) )
        {
            return \Exceptions::throws('Error', 'fileNotFound', $file); 
        }
        
        $return = bzwrite($open, $data, strlen($data));
        
        bzclose($open);
        
        return $return;
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Read
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string  $file
    // @param numeric $length
    // @param string  $type
    //
    //--------------------------------------------------------------------------------------------------------
    public function read($file, $length, $type)
    {
        $open = bzopen($file, $type);
        
        if( empty($open) )
        {
            return \Exceptions::throws('Error', 'fileNotFound', $file); 
        }
        
        $return = bzread($open, $length);
        
        bzclose($open);
        
        return $return;
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Do
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string  $data
    // @param int     $blockSize
    // @param int     $workFactor
    //
    //--------------------------------------------------------------------------------------------------------
    public function do($data, $blockSize, $workFactor)
    {
        return bzcompress($data);
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Undo
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string  $data
    // @param numeric $small
    //
    //--------------------------------------------------------------------------------------------------------
    public function undo($data, $small)
    {
        return bzdecompress($data);
    }
}