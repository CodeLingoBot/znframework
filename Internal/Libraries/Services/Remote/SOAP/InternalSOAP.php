<?php namespace ZN\Services\Remote;

use SoapClient, SoapServer, SoapHeader, Arrays, XML;

class InternalSOAP implements InternalSOAPInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Create WSDL
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $createWSDL = [];

    //--------------------------------------------------------------------------------------------------------
    // Methods
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $methods =
    [
        'dorequest'      , 'getfunctions'          , 'getlastrequest', 'getlastrequestheaders',
        'getlastresponse', 'getlastresponseheaders', 'gettypes'      , 'setcookie',
        'setlocation'    , 'setsoapheaders'        , 'soapcall'
    ];

    //--------------------------------------------------------------------------------------------------------
    // Magic Call
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $method
    // @param array  $parameters
    //
    //--------------------------------------------------------------------------------------------------------
    public function __call($method, $parameters)
    {
        if( Arrays::valueExists($this->methods, strtolower($method)) )
        {
            $method = '__' . $method;

            return $this->client->$method(...$parameters);
        }

        return $this->client->$method(...$parameters);
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function _element($type, $param)
    {
        foreach( $param as $p )
        {
            $this->createWSDL[] =
            [
                'name'      => $type,
                'attr'      => $p['attr']    ?? [],
                'content'   => $p['content'] ?? NULL,
                'child'     => $p['child']   ?? NULL
            ];
        }
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function message(...$param) : InternalSOAP
    {
        $this->_element('wsdl:message', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function types(...$param) : InternalSOAP
    {
        $this->_element('wsdl:types', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function portType(...$param) : InternalSOAP
    {
        $this->_element('wsdl:portType', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function binding(...$param) : InternalSOAP
    {
        $this->_element('wsdl:binding', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Create WSDL
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $method
    // @param array  $parameters
    //
    //--------------------------------------------------------------------------------------------------------
    public function createWSDL(Array $data = [])
    {
        return XML::build
        ([
            'name'  => 'wsdl:definitions',
            'attr'  => $data,
            'child' => $this->createWSDL
        ]);
    }

    //--------------------------------------------------------------------------------------------------------
    // Content Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type    = 'json'
    // @param string $charset = 'utf-8'
    //
    //--------------------------------------------------------------------------------------------------------
    public function contentType(String $type = 'xml', String $charset = 'utf-8') : InternalSOAP
    {
        header('Content-Type: application/' . $type . '; charset=' . $charset);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // WSDL Cache Enabled
    //--------------------------------------------------------------------------------------------------------
    //
    // @param bool $open = true
    //
    //--------------------------------------------------------------------------------------------------------
    public function cache(Bool $open = true) : InternalSOAP
    {
        ini_set('soap.wsdl_cache_enabled', $open);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Is Url
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $url
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _isUrl(&$url)
    {
        if( $url !== NULL )
        {
            if( ! isUrl($url) )
            {
                $url = siteUrl($url);
            }
        }
    }

    //--------------------------------------------------------------------------------------------------------
    // Data
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array $data
    //
    //--------------------------------------------------------------------------------------------------------
    public function options(Array $options) : InternalSOAP
    {
        $this->options = $options;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Get
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $url
    // @param array  $options
    //
    //--------------------------------------------------------------------------------------------------------
    public function get(String $url = NULL, Array $options = []) : SoapClient
    {
        return $this->_class('SoapClient', 'client', $url, $options);
    }

    //--------------------------------------------------------------------------------------------------------
    // Return
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $url
    // @param array  $options
    //
    //--------------------------------------------------------------------------------------------------------
    public function return(String $url = NULL, Array $options = []) : SoapServer
    {
        return $this->_class('SoapServer', 'server', $url, $options);
    }

    //--------------------------------------------------------------------------------------------------------
    // Data
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array $data
    //
    //--------------------------------------------------------------------------------------------------------
    public function data($data) : InternalSOAP
    {
        $this->data = $data;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Headers
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $namespace
    // @param string $name
    // @param mixed  $data = NULL
    //
    //--------------------------------------------------------------------------------------------------------
    public function headers(String $namespace, String $name, $data = NULL)
    {
          $this->setSoapHeaders(new SoapHeader($namespace, $name, $this->data ?? $data));
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Class
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $url
    // @param array  $options
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _class($class, $object, $url, $options)
    {
        $this->_isUrl($url);

        return $this->$object = new $class($url, $this->options ?? $options);
    }
}
