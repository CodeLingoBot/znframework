<?php
namespace ZN\ViewObjects\Jquery\Helpers;

use ZN\ViewObjects\JqueryTrait;

class Animate extends \CallController
{
	//----------------------------------------------------------------------------------------------------
	//
	// Yazar      : Ozan UYKUN <ozanbote@windowslive.com> | <ozanbote@gmail.com>
	// Site       : www.zntr.net
	// Lisans     : The MIT License
	// Telif HakkÄ±: Copyright (c) 2012-2016, zntr.net
	//
	//----------------------------------------------------------------------------------------------------
	
	//----------------------------------------------------------------------------------------------------
	// Jquery Trait                                                                 
	//----------------------------------------------------------------------------------------------------
	//
	// @methods
	//																						  
	//----------------------------------------------------------------------------------------------------
	use JqueryTrait;
	
	//----------------------------------------------------------------------------------------------------
	// Easing                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @var string
	//																						  
	//----------------------------------------------------------------------------------------------------
	protected $easing = [];
		
	//----------------------------------------------------------------------------------------------------
	// Attr                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @var string
	//																						  
	//----------------------------------------------------------------------------------------------------
	protected $attr = '';
	
	//----------------------------------------------------------------------------------------------------
	// Speed                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @param scalar $duration
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function speed($duration)
	{
		if( ! is_scalar($duration) )
		{
			throw new \Exception(lang('Error', 'scalarParameter', '1.($duration)'));
		}

		$this->duration($duration);
		
		return $this;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Duration                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @param scalar $duration
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function duration($duration)
	{
		if( ! is_scalar($duration) )
		{
			throw new \Exception(lang('Error', 'scalarParameter', '1.($duration)'));
		}

		$this->easing['duration'] = $duration;

		return $this;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Queue                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @param scalar $queue
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function queue($queue = true)
	{
		if( ! is_scalar($queue) )
		{
			throw new \Exception(lang('Error', 'scalarParameter', '1.($queue)'));
		}

		if( is_bool($queue) )
		{
			$queue = $this->_boolToStr($queue);	
		}
		elseif( is_string($queue) )
		{
			$queue = $queue;
		}

		$this->easing['queue'] = $queue;
		
		return $this;	
	}
	
	//----------------------------------------------------------------------------------------------------
	// Attr                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @param array $attr
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function attr(Array $attr)
	{
		$this->attr = $this->_object($attr);	
		
		return $this;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Easing                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @param string $easing
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function easing(String $easing)
	{	
		$this->easing['easing'] = $easing;	
		
		return $this;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Special Easing                                                              
	//----------------------------------------------------------------------------------------------------
	//
	// @param array $specialEasing
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function specialEasing(Array $specialEasing)
	{	
		$this->easing['specialEasing'] = $this->_object($specialEasing);	
		
		return $this;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Step                                                             
	//----------------------------------------------------------------------------------------------------
	//
	// @param string $step
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function step(String $step)
	{	
		$this->easing['step'] = \JQ::func('now, fx', $step);	
		
		return $this;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Comp                                                             
	//----------------------------------------------------------------------------------------------------
	//
	// @param string $comp
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function comp(String $comp)
	{	
		$this->easing['complete'] = \JQ::func('', $comp);	
		
		return $this;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Complete                                                           
	//----------------------------------------------------------------------------------------------------
	//
	// @param void
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function complete()
	{
		$attr = [];
		
		$animate = \JQ::property('animate', [$this->attr, $this->callback, $this->_object($this->easing)]);
		
		$this->_defaultVariable();
		
		return $animate;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Create                                                           
	//----------------------------------------------------------------------------------------------------
	//
	// @param variadic $args
	//																						  
	//----------------------------------------------------------------------------------------------------
	public function create(...$args)
	{
		$combineAnimation = $args;
		
		$animate  = EOL."\t".\JQ::selector($this->selector);
		
		$animate .= $this->complete();
		
		if( ! empty($combineAnimation) ) foreach( $combineAnimation as $animation )
		{			
			$animate .= $animation;
		}
	
		$animate .= ";".EOL;
			
		return $this->_tag($animate);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Protected                                                           
	//----------------------------------------------------------------------------------------------------
	protected function _defaultVariable()
	{
		$this->easing = [];
		$this->callback = '';
		$this->selector = 'this';
		$this->attr = '';
	}
}