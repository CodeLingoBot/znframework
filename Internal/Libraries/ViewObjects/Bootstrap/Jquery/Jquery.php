<?php namespace ZN\ViewObjects\Bootstrap;

use JQ;

class InternalJquery extends \CallController implements JqueryInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Telif HakkÄ±: Copyright (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------
    
    //--------------------------------------------------------------------------------------------------------
    // Jquery Trait                                                                 
    //--------------------------------------------------------------------------------------------------------
    //
    // @methods
    //                                                                                        
    //--------------------------------------------------------------------------------------------------------
    use JqueryTrait;
    
    //--------------------------------------------------------------------------------------------------------
    // Property Queue                                                                  
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string
    //                                                                                        
    //--------------------------------------------------------------------------------------------------------  
    protected $propertyQueue = '';
    
    //--------------------------------------------------------------------------------------------------------
    // Property                                                                 
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string   $property
    // @param variadic $attr
    //                                                                                        
    //--------------------------------------------------------------------------------------------------------
    public function property(String $property, ...$attr) : InternalJquery
    {
        $this->propertyQueue .= JQ::property($property, $attr);

        return $this;
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Complete                                                                 
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //                                                                                        
    //--------------------------------------------------------------------------------------------------------
    public function complete() : String
    {
        $complete = $this->propertyQueue;

        $this->_defaultVariable();
        
        return $complete;
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Create                                                                 
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //                                                                                        
    //--------------------------------------------------------------------------------------------------------
    public function create(...$args) : String
    {
        $combineFunction = $args;
        
        $complete  = EOL.JQ::selector($this->selector);
        
        $complete .= $this->complete();     
            
        if( ! empty($combineFunction)) foreach( $combineFunction as $function )
        {           
            $complete .= $function;
        }
        
        $complete .= ";";
        
        return $complete;   
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Ajax
    //--------------------------------------------------------------------------------------------------------
    // 
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function ajax(Bool $tag = false, Bool $jq = false, Bool $jqui = false) : Jquery\Helpers\Ajax
    {
        return uselib('Ajax', [$tag, $jq, $jqui]);
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Action
    //--------------------------------------------------------------------------------------------------------
    // 
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function action(Bool $tag = false, Bool $jq = false, Bool $jqui = false) : Jquery\Helpers\Action
    {
        return uselib('Action', [$tag, $jq, $jqui]);
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Animate
    //--------------------------------------------------------------------------------------------------------
    // 
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function animate(Bool $tag = false, Bool $jq = false, Bool $jqui = false) : Jquery\Helpers\Animate
    {
        return uselib('Animate', [$tag, $jq, $jqui]);
    }
    
    //--------------------------------------------------------------------------------------------------------
    // Event
    //--------------------------------------------------------------------------------------------------------
    // 
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    public function event(Bool $tag = false, Bool $jq = false, Bool $jqui = false) : Jquery\Helpers\Event
    {
        return uselib('Event', [$tag, $jq, $jqui]);
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Variable                                                                 
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //                                                                                        
    //--------------------------------------------------------------------------------------------------------
    protected function _defaultVariable()
    {
        $this->selector = 'this';
        $this->propertyQueue = '';
    }
}