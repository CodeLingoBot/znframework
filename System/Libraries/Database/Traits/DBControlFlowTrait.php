<?php
trait DBControlFlowTrait
{
	/******************************************************************************************
	* SWITCH CASE                                                                             *
	*******************************************************************************************
	| 																 	 					  |
	  @param args
		
	  @return string
	|          																				  |
	******************************************************************************************/
	public function switchCase($switch = '', $conditions = array())
	{
		$case = ' CASE '.$switch;
		
		if( is_array($conditions) ) foreach( $conditions as $key => $val )
		{
			if( strtolower($key) === 'default' || strtolower($key) === 'else' )
			{
				$key = ' ELSE ';
			}
			else
			{
				$key = ' WHEN '.$key.' THEN ';
			}
			
			$case .= $key.$val;
		}
		
		return $case.' END; ';
	}
	
	/******************************************************************************************
	* IF ELSE                                                                                 *
	*******************************************************************************************
	| 																 	 					  |
	  @param args
		
	  @return string
	|          																				  |
	******************************************************************************************/
	public function ifElse()
	{
		return $this->_math('IF', func_get_args());
	}
	
	/******************************************************************************************
	* IF NULL                                                                                 *
	*******************************************************************************************
	| 																 	 					  |
	  @param args
		
	  @return string
	|          																				  |
	******************************************************************************************/
	public function ifNull()
	{
		return $this->_math('IFNULL', func_get_args());
	}
	
	/******************************************************************************************
	* NULL IF                                                                                 *
	*******************************************************************************************
	| 																 	 					  |
	  @param args
		
	  @return string
	|          																				  |
	******************************************************************************************/
	public function nullIf()
	{
		return $this->_math('NULLIF', func_get_args());
	}
}