<?php
trait DBVariableTypesTrait
{
	/******************************************************************************************
	* INT                                                                                     *
	*******************************************************************************************
	| Genel Kullanım: SQL INT kullanımının karşılığıdır.									  |
	
	  @var numeric $len
	  
	  @return INT
	|          																				  |
	******************************************************************************************/
	public function int($len = '')
	{
		return $this->db->int($len);
	}
	
	/******************************************************************************************
	* INTEGER                                                                                 *
	*******************************************************************************************
	| Genel Kullanım: SQL INT kullanımının karşılığıdır.									  |
	
	  @var numeric $len
	  
	  @return INT
	|          																				  |
	******************************************************************************************/
	public function integer($len = '')
	{
		return $this->int($len);
	}
	
	/******************************************************************************************
	* SMALLINT                                                                                *
	*******************************************************************************************
	| Genel Kullanım: SQL SMALLINT kullanımının karşılığıdır.								  |
	
	  @var numeric $len
	  
	  @return SMALLINT
	|          																				  |
	******************************************************************************************/
	public function smallInt($len = '')
	{
		return $this->db->smallInt($len);
	}
	
	/******************************************************************************************
	* TINYINT                                                                                 *
	*******************************************************************************************
	| Genel Kullanım: SQL TINYINT kullanımının karşılığıdır.								  |
	
	  @var numeric $len
	  
	  @return TINYINT
	|          																				  |
	******************************************************************************************/
	public function tinyInt($len = '')
	{
		return $this->db->tinyInt($len);
	}
	
	/******************************************************************************************
	* MEDIUMINT                                                                               *
	*******************************************************************************************
	| Genel Kullanım: SQL MEDIUMINT kullanımının karşılığıdır.								  |
	
	  @var numeric $len
	  
	  @return MEDIUMINT
	|          																				  |
	******************************************************************************************/
	public function mediumInt($len = '')
	{
		return $this->db->mediumInt($len);
	}
	
	/******************************************************************************************
	* BIGINT                                                                                  *
	*******************************************************************************************
	| Genel Kullanım: SQL BIGINT kullanımının karşılığıdır.	     							  |
	
	  @var numeric $len
	  
	  @return BIGINT
	|          																				  |
	******************************************************************************************/
	public function bigInt($len = '')
	{
		return $this->db->bigInt($len);
	}
	
	/******************************************************************************************
	* DECIMAL                                                                                 *
	*******************************************************************************************
	| Genel Kullanım: SQL DECIMAL kullanımının karşılığıdır.	  							  |
	
	  @var numeric $len
	  
	  @return DECIMAL
	|          																				  |
	******************************************************************************************/
	public function decimal($len = '')
	{
		return $this->db->decimal($len);
	}
	
	/******************************************************************************************
	* DOUBLE                                                                                  *
	*******************************************************************************************
	| Genel Kullanım: SQL DOUBLE kullanımının karşılığıdır.	  	     						  |
	
	  @var numeric $len
	  
	  @return DOUBLE
	|          																				  |
	******************************************************************************************/
	public function double($len = '')
	{
		return $this->db->double($len);
	}
	
	/******************************************************************************************
	* FLOAT                                                                                   *
	*******************************************************************************************
	| Genel Kullanım: SQL FLOAT kullanımının karşılığıdır.	  	     						  |
	
	  @var numeric $len
	  
	  @return FLOAT
	|          																				  |
	******************************************************************************************/
	public function float($len = '')
	{
		return $this->db->float($len);
	}
	
	/******************************************************************************************
	* CHAR                                                                                    *
	*******************************************************************************************
	| Genel Kullanım: SQL CHAR kullanımının karşılığıdır.	  	     						  |
	
	  @var numeric $len
	  
	  @return CHAR
	|          																				  |
	******************************************************************************************/
	public function char($len = '')
	{
		return $this->db->char($len);
	}
	
	/******************************************************************************************
	* VARCHAR                                                                                 *
	*******************************************************************************************
	| Genel Kullanım: SQL VARCHAR kullanımının karşılığıdır. 	     						  |
	
	  @var numeric $len
	  
	  @return VARCHAR
	|          																				  |
	******************************************************************************************/
	public function varChar($len = '')
	{
		return $this->db->varChar($len);
	}
	
	/******************************************************************************************
	* TINYTEXT                                                                                *
	*******************************************************************************************
	| Genel Kullanım: SQL TINYTEXT kullanımının karşılığıdır. 	     						  |
	
	  @return TINYTEXT
	|          																				  |
	******************************************************************************************/
	public function tinyText()
	{
		return $this->db->tinyText();
	}
	
	/******************************************************************************************
	* TEXT                                                                                    *
	*******************************************************************************************
	| Genel Kullanım: SQL TEXT kullanımının karşılığıdır. 	         						  |
	
	  @return TEXT
	|          																				  |
	******************************************************************************************/
	public function text()
	{
		return $this->db->text();
	}
	
	/******************************************************************************************
	* MEDIUMTEXT                                                                              *
	*******************************************************************************************
	| Genel Kullanım: SQL MEDIUMTEXT kullanımının karşılığıdır. 	   						  |
	
	  @return MEDIUMTEXT
	|          																				  |
	******************************************************************************************/
	public function mediumText()
	{
		return $this->db->mediumText();
	}
	
	/******************************************************************************************
	* LONGTEXT                                                                                *
	*******************************************************************************************
	| Genel Kullanım: SQL LONGTEXT kullanımının karşılığıdır. 	     						  |
	
	  @return LONGTEXT
	|          																				  |
	******************************************************************************************/
	public function longText()
	{
		return $this->db->longText();
	}
	
	/******************************************************************************************
	* DATE                                                                                    *
	*******************************************************************************************
	| Genel Kullanım: SQL DATE kullanımının karşılığıdır. 	         						  |
	
	  @var numeric $len
	  
	  @return DATE
	|          																				  |
	******************************************************************************************/
	public function date($len = '')
	{
		return $this->db->date();
	}
	
	/******************************************************************************************
	* DATETIME                                                                                *
	*******************************************************************************************
	| Genel Kullanım: SQL DATETIME kullanımının karşılığıdır. 	       						  |
	
	  @var numeric $len
	  
	  @return DATETIME
	|          																				  |
	******************************************************************************************/
	public function datetime($len = '')
	{
		return $this->db->datetime();
	}
	
	/******************************************************************************************
	* TIME                                                                                    *
	*******************************************************************************************
	| Genel Kullanım: SQL TIME kullanımının karşılığıdır.    	       						  |
	
	  @var numeric $len
	  
	  @return TIME
	|          																				  |
	******************************************************************************************/
	public function time($len = '')
	{
		return $this->db->time();
	}
	
	/******************************************************************************************
	* TIMESTAMP                                                                               *
	*******************************************************************************************
	| Genel Kullanım: SQL TIMESTAMP kullanımının karşılığıdır.    	  						  |
	
	  @var numeric $len
	  
	  @return TIMESTAMP
	|          																				  |
	******************************************************************************************/
	public function timeStamp($len = '')
	{
		return $this->db->timeStamp();
	}
	
	/******************************************************************************************
	* ENUM                                                                                    *
	*******************************************************************************************
	| Genel Kullanım: SQL ENUM kullanımının karşılığıdır.        	  						  |
	
	  @var ...args
	  
	  @return ENUM(p1, p2 ... pN)
	|          																				  |
	******************************************************************************************/
	public function enum()
	{
		return $this->db->enum(func_get_args());
	}
	
	/******************************************************************************************
	* SET                                                                                     *
	*******************************************************************************************
	| Genel Kullanım: SQL SET kullanımının karşılığıdır.        	  						  |
	
	  @var ...args
	  
	  @return SET(p1, p2 ... pN)
	|          																				  |
	******************************************************************************************/
	public function set()
	{
		return $this->db->set(func_get_args());
	}
	
	/******************************************************************************************
	* AUTO INCREMENT                                                                          *
	*******************************************************************************************
	| Genel Kullanım: SQL AUTO_INCREMENT  kullanımının karşılığıdır.        	  			  |
	  
	  @return AUTO_INCREMENT
	|          																				  |
	******************************************************************************************/
	public function autoIncrement()
	{
		return $this->db->autoIncrement();
	}
	
	/******************************************************************************************
	* PRIMARY KEY                                                                             *
	*******************************************************************************************
	| Genel Kullanım: SQL PRIMARY KEY kullanımının karşılığıdır.   	  						  |
	
	  @var string $col
	  
	  @return PRIMARY KEY
	|          																				  |
	******************************************************************************************/
	public function primaryKey($col = '')
	{
		return $this->db->primaryKey($col);
	}
	
	/******************************************************************************************
	* FOREIGN KEY                                                                             *
	*******************************************************************************************
	| Genel Kullanım: SQL FOREIGN KEY kullanımının karşılığıdır.   	  						  |
	
	  @var string $col
	  
	  @return FOREIGN KEY
	|          																				  |
	******************************************************************************************/
	public function foreignKey($col = '')
	{
		return $this->db->foreignKey($col);
	}
	
	/******************************************************************************************
	* UNIQUE                                                                                  *
	*******************************************************************************************
	| Genel Kullanım: SQL UNIQUE kullanımının karşılığıdır.      	  						  |
	
	  @var string $col
	  
	  @return UNIQUE
	|          																				  |
	******************************************************************************************/
	public function unique($col = '')
	{
		return $this->db->unique($col);
	}
	
	/******************************************************************************************
	* NULL                                                                                    *
	*******************************************************************************************
	| Genel Kullanım: SQL NULL kullanımının karşılığıdır.       	  						  |
	
	  @var bool $type
	  
	  @return NULL / NOT NULL
	|          																				  |
	******************************************************************************************/
	public function null($type = true)
	{
		return $this->db->null($type);
	}
	
	/******************************************************************************************
	* NOT NULL                                                                                *
	*******************************************************************************************
	| Genel Kullanım: SQL NOT NULL kullanımının karşılığıdır.     	  						  |
	
	  @return NOT NULL
	|          																				  |
	******************************************************************************************/
	public function notNull()
	{
		return $this->db->notNull();
	}
}