<?php
class __USE_STATIC_ACCESS__JQ
{
	//----------------------------------------------------------------------------------------------------
	//
	// Yazar      : Ozan UYKUN <ozanbote@windowslive.com> | <ozanbote@gmail.com>
	// Site       : www.zntr.net
	// Lisans     : The MIT License
	// Telif Hakkı: Copyright (c) 2012-2016, zntr.net
	//
	//----------------------------------------------------------------------------------------------------
	
	use JqueryTrait;
	
	//----------------------------------------------------------------------------------------------------
	// Call Method
	//----------------------------------------------------------------------------------------------------
	// 
	// __call()
	//
	//----------------------------------------------------------------------------------------------------
	use CallUndefinedMethodTrait;
	
	//----------------------------------------------------------------------------------------------------
	// Property
	//----------------------------------------------------------------------------------------------------
	//
	// @var  string
	//
	//----------------------------------------------------------------------------------------------------
	protected $property = '';
	
	//----------------------------------------------------------------------------------------------------
	// Func
	//----------------------------------------------------------------------------------------------------
	//
	// @var  string
	//
	//----------------------------------------------------------------------------------------------------
	protected $func = '';
	
	//----------------------------------------------------------------------------------------------------
	// Attr
	//----------------------------------------------------------------------------------------------------
	//
	// @var  string
	//
	//----------------------------------------------------------------------------------------------------
	protected $attr = '';
	
	//----------------------------------------------------------------------------------------------------
	// Selector
	//----------------------------------------------------------------------------------------------------
	//
	// Seçici belirtmek için kullanılır.
	//
	// @param  string $selector
	// @return string 
	//
	//----------------------------------------------------------------------------------------------------
	public function selector($selector = '')
	{
		if( ! isChar($selector) )
		{
			Error::set('Error', 'valueParameter', 'selector');
			return $this;	
		}
		
		if( $this->_isKeySelector($selector) )
		{
			$code = $selector;	
		}
		else
		{
			$code = "\"$selector\"";	
		}
		
		return "$($code)";
	}
	
	//----------------------------------------------------------------------------------------------------
	// Property
	//----------------------------------------------------------------------------------------------------
	//
	// Jquery propertisi oluşturmak için kullanılır.
	//
	// @param string $property
	// @param array  $params
	// @param bool   $comma false
	//  
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function property($property = '', $params = array(), $comma = false)
	{
		if( ! is_string($property) || empty($property) )
		{
			return Error::set('Error', 'stringParameter', 'property');	
		}

		return ".$property(". $this->_params($params).")".($comma === true ? ";" : "");
	}
	
	//----------------------------------------------------------------------------------------------------
	// Func
	//----------------------------------------------------------------------------------------------------
	//
	// Jquery fonksiyonu oluşturmak için kullanılır.
	//
	// @param string $params
	// @param string $code
	// @param bool   $comma false
	//  
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function func($params = '', $code = '', $comma = false)
	{
		if( empty($code) )
		{
			return false;	
		}
		
		return "function($params){".$code."}".($comma === true ? ";" : "");
	}
	
	//----------------------------------------------------------------------------------------------------
	// Callback / Func
	//----------------------------------------------------------------------------------------------------
	//
	// Jquery fonksiyonu oluşturmak için kullanılır.
	//
	// @param string $params
	// @param string $code
	// @param bool   $comma false
	//  
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function callback($params = '', $code = '', $comma = false)
	{
		return $this->func($params, $code, $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Combine
	//----------------------------------------------------------------------------------------------------
	//
	// Genel jquery komutu oluşturmak için kullanılır.
	//
	// @param string $selector
	// @param string $property
	// @param array  $params
	// @param string $callback
	// @param bool   $comma false
	//  
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function combine($selector = '', $property = '', $params = '', $callback = '', $comma = false)
	{
		if( ! empty($callback) )
		{
			$params[] = array($this->func('e', $callback));
		}
		
		return $this->selector($selector).$this->property($property, $params, $comma);		   
	}
	
	//----------------------------------------------------------------------------------------------------
	// Serialize
	//----------------------------------------------------------------------------------------------------
	//
	// Genel jquery serialize komutu oluşturmak için kullanılır.
	//
	// @param string $selector
	// @param array  $func
	// @param bool   $comma false
	//  
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function serialize($selector = '', $params = array(), $comma = false)
	{
		return $this->combine($selector, 'serialize', $params, '', $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// To Json
	//----------------------------------------------------------------------------------------------------
	//
	// @param  mixed  $params
	// @param  boole  $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function toJson($params = array(), $comma = false)
	{
		return '$'.$this->property('toJSON', $params, $comma);
	}
}