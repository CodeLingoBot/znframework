<?php
class __USE_STATIC_ACCESS__JS
{
	//----------------------------------------------------------------------------------------------------
	//
	// Yazar      : Ozan UYKUN <ozanbote@windowslive.com> | <ozanbote@gmail.com>
	// Site       : www.zntr.net
	// Lisans     : The MIT License
	// Telif HakkÄ±: Copyright (c) 2012-2016, zntr.net
	//
	//----------------------------------------------------------------------------------------------------
	
	//----------------------------------------------------------------------------------------------------
	// Call Method
	//----------------------------------------------------------------------------------------------------
	// 
	// __call()
	//
	//----------------------------------------------------------------------------------------------------
	use CallUndefinedMethodTrait;
	
	//----------------------------------------------------------------------------------------------------
	// Protected Js Func
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $func
	// @param  string $code
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	protected function _jsFunc($func = '', $code = '', $comma = false)
	{
		return "$func($code)".($comma === true ? ";" : "");
	}
	
	//----------------------------------------------------------------------------------------------------
	// Interval 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $time
	// @param  string $code
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function interval($time = '', $code = '', $comma = true)
	{
		return $this->_jsFunc('setInterval', "$code, $time", $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Timeout 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $time
	// @param  string $code
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function timeout($time = '', $code = '', $comma = true)
	{
		return $this->_jsFunc('setTimeout', "$code, $time", $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// indexOf 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $find
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function indexOf($str = '', $find = '', $comma = true)
	{
		return $this->_jsFunc("String($str).indexOf", $find, $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// lastIndexOf 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $find
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function lastIndexOf($str = '', $find = '', $comma = true)
	{
		return $this->_jsFunc("String($str).lastIndexOf", $find, $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// search 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $find
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function search($str = '', $find = '', $comma = true)
	{
		return $this->_jsFunc("String($str).search", $find, $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// slice 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function slice($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).slice", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// substr 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function substr($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).substr", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// substring 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function substring($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).substring", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// replace 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function replace($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).replace", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Upper Case 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function upperCase($str  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).toUpperCase", '' , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Lowe Case 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function lowerCase($str  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).toLowerCase", '' , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// concat 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function concat($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).concat", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// charAt 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function charAt($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).charAt", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// charCodeAt 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function codeAt($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).charCodeAt", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// split 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $str
	// @param  string $param
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function split($str  = '', $param  = '', $comma = true)
	{
		return $this->_jsFunc("String($str).split", $param , $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Alert 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $code
	// @param  bool   $comma
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function alert($code = '', $comma = true)
	{
		return $this->_jsFunc('alert', $code, $comma);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Confirm 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $code
	// @param  string $true
	// @param  string $false
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function confirm($code = '', $true = '', $false = '')
	{
		 $confirm = $this->_jsFunc('confirm', $code, false);
		 
		 if( empty($true) )
		 {
			 return "$confirm;";
		 }
		 
		 return $this->ifClause("$confirm === true", $true).$this->elseClause($false);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Protected Clause 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $type
	// @param  string $condition
	// @param  string $code
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	protected function _clause($type = '', $condition = '', $code = '')
	{
		$eol = eol();
		return $this->_jsFunc($type, $condition, false)."{".$code."}";
	}
	
	//----------------------------------------------------------------------------------------------------
	// If Clause 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $condition
	// @param  string $code
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function ifClause($condition = '', $code = '' , $elseCode = '')
	{
		$elseCode = ! empty($elseCode) ? $this->elseClause($elseCode) : '';
		
		return $this->_clause('if', $condition, $code).$elseCode;
	}
	
	//----------------------------------------------------------------------------------------------------
	// Else If Clause 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $condition
	// @param  string $code
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function elseIfClause($condition = '', $code = '')
	{
		return $this->_clause('else if', $condition, $code);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Else Clause 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $code
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function elseClause($code = '')
	{
		return "else{".$code."}";
	}
	
	//----------------------------------------------------------------------------------------------------
	// For Loop 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $condition
	// @param  string $code
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function forLoop($condition = '', $code = '')
	{
		return $this->_clause('for', $condition, $code);
	}
	
	//----------------------------------------------------------------------------------------------------
	// While Loop 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $condition
	// @param  string $code
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function whileLoop($condition = '', $code = '')
	{
		return $this->_clause('while', $condition, $code);
	}
	
	//----------------------------------------------------------------------------------------------------
	// Do While Loop
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $condition
	// @param  string $code
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function doWhileLoop($condition, $code = '')
	{
		return "do{".$code."}while(".$condition.")";
	}
	
	//----------------------------------------------------------------------------------------------------
	// Switch Clause 
	//----------------------------------------------------------------------------------------------------
	//
	// @param  string $condition
	// @param  array  $cases
	// @return string
	//
	//----------------------------------------------------------------------------------------------------
	public function switchClause($condition = '', $cases = array())
	{
		$clause = '';
		
		if( ! empty($cases) ) foreach( $cases as $case => $code )
		{
			if( $case !== 'multiple' )
			{
				if( $case !== 'default' )
				{
					$clause .= "case $case : $code break; ";
				}
				else
				{
					$clause .= "$case : $code";
				}
			}
			else
			{
				$multiple = isset($code[0]) ?  $code[0] : array();
				$mcode    = isset($code[1]) ?  $code[1] : '';
				
				if( ! empty($multiple) ) foreach( $multiple as $val )
				{
					$clause .= "case $val : ";	
				}
				
				$clause .= "$mcode break; ";
			}
		}
		
		return "switch($condition){".$clause."}";
	}
}