<?php
//--------------------------------------------------------------------------------------------------
// ZERONEED PHP WEB FRAMEWORK 
//--------------------------------------------------------------------------------------------------
//
// Author     : Ozan UYKUN <ozanbote@windowslive.com> | <ozanbote@gmail.com>
// Site       : www.znframework.com
// License    : The MIT License
// Copyright  : Copyright (c) 2012-2016, ZN Framework
//
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Start Micro Time
//--------------------------------------------------------------------------------------------------
$start = microtime();
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// REAL_BASE_DIR
//--------------------------------------------------------------------------------------------------
define('REAL_BASE_DIR', realpath(__DIR__).DIRECTORY_SEPARATOR);
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Current Working Dir
//--------------------------------------------------------------------------------------------------
chdir(REAL_BASE_DIR);
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// INTERNAL_DIR
//--------------------------------------------------------------------------------------------------
//
// @return Internal/
//
//--------------------------------------------------------------------------------------------------
define('INTERNAL_DIR', REAL_BASE_DIR.'Internal/'); 

//--------------------------------------------------------------------------------------------------
// CORE_DIR
//--------------------------------------------------------------------------------------------------
//
// @return Internal/Core/
//
//--------------------------------------------------------------------------------------------------
define('CORE_DIR', INTERNAL_DIR.'Core/'); 

//--------------------------------------------------------------------------------------------------
// Base
//--------------------------------------------------------------------------------------------------
require_once CORE_DIR.'Base.php';
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Require Projects Config File
//--------------------------------------------------------------------------------------------------

$projects = require_once PROJECTS_DIR.'Projects.php';
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Preloading
//--------------------------------------------------------------------------------------------------
require_once CORE_DIR.'HighLevel.php';
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Application Directory
//--------------------------------------------------------------------------------------------------
$projectDir = $projects['directory']['others'];

if( is_array($projectDir) && ! empty($projectDir[host()]) )
{
    $projectDir = $projectDir[host()];
}
elseif( defined('_CURRENT_PROJECT_DIR') )
{
    $flip              = array_flip($projectDir);
    $projectDir        = _CURRENT_PROJECT_DIR;          
    $currentProjectDir = ! empty($flip[$projectDir]) 
                         ? $flip[$projectDir] 
                         : $projectDir;

    define('CURRENT_PROJECT_DIR', $currentProjectDir);
}
elseif( is_array($projectDir) )
{
    $projectDir = $projects['directory']['default']; 
}

//--------------------------------------------------------------------------------------------------
// Project Directory
//--------------------------------------------------------------------------------------------------
define('PROJECT_DIR', suffix(PROJECTS_DIR.$projectDir));
//--------------------------------------------------------------------------------------------------

if( ! is_dir(PROJECT_DIR) )
{
    trace('["'.$projectDir.'"] Project Directory Not Found!');
}

//--------------------------------------------------------------------------------------------------
// Internal/Core/Required.php
//--------------------------------------------------------------------------------------------------
require_once REQUIRED_FILE; 
//--------------------------------------------------------------------------------------------------
    
//--------------------------------------------------------------------------------------------------
// Finish Micro Time
//--------------------------------------------------------------------------------------------------
$finish = microtime();
//--------------------------------------------------------------------------------------------------
    
if( Config::get('Project', 'benchmark') === true ) 
{
    //----------------------------------------------------------------------------------------------
    // System Elapsed Time Calculating
    //----------------------------------------------------------------------------------------------
    $elapsedTime = $finish - $start;
    //----------------------------------------------------------------------------------------------

    //----------------------------------------------------------------------------------------------
    // Get Memory Usage
    //----------------------------------------------------------------------------------------------
    $memoryUsage = memory_get_usage();
    //----------------------------------------------------------------------------------------------

    //----------------------------------------------------------------------------------------------
    // Get Maximum Memory Usage
    //----------------------------------------------------------------------------------------------
    $maxMemoryUsage = memory_get_peak_usage();
    //----------------------------------------------------------------------------------------------

    //----------------------------------------------------------------------------------------------
    // Template Benchmark Performance Result Table
    //----------------------------------------------------------------------------------------------
    $benchmarkData = 
    [
        'elapsedTime'    => $elapsedTime,
        'memoryUsage'    => $memoryUsage,
        'maxMemoryUsage' => $maxMemoryUsage
    ];  

    $benchResult = Import::template('BenchmarkTable', $benchmarkData, true);
    //----------------------------------------------------------------------------------------------

    //----------------------------------------------------------------------------------------------
    // Get Benchmark Performance Result Table
    //----------------------------------------------------------------------------------------------
    internalBenchmarkReport($benchResult);
    //----------------------------------------------------------------------------------------------
}   